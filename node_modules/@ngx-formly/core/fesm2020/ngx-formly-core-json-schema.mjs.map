{"version":3,"file":"ngx-formly-core-json-schema.mjs","sources":["../../../../src/core/json-schema/src/formly-json-schema.service.ts","../../../../src/core/json-schema/src/ngx-formly-core-json-schema.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { JSONSchema7, JSONSchema7TypeName } from 'json-schema';\nimport { FormGroup } from '@angular/forms';\nimport {\n  ɵreverseDeepMerge as reverseDeepMerge,\n  ɵgetFieldValue as getFieldValue,\n  ɵclone as clone,\n  ɵisNil as isNil,\n} from '@ngx-formly/core';\nimport { tap } from 'rxjs/operators';\n\nexport interface FormlyJsonschemaOptions {\n  /**\n   * allows to intercept the mapping, taking the already mapped\n   * formly field and the original JSONSchema source from which it\n   * was mapped.\n   */\n  map?: (mappedField: FormlyFieldConfig, mapSource: JSONSchema7) => FormlyFieldConfig;\n}\n\n// https://stackoverflow.com/a/27865285\nfunction decimalPlaces(a: number) {\n  if (!isFinite(a)) {\n    return 0;\n  }\n\n  let e = 1,\n    p = 0;\n  while (Math.round(a * e) / e !== a) {\n    e *= 10;\n    p++;\n  }\n\n  return p;\n}\n\nfunction isEmpty(v: any) {\n  return v === '' || v == null;\n}\n\nfunction isObject(v: any) {\n  return v != null && typeof v === 'object' && !Array.isArray(v);\n}\n\nfunction isInteger(value: any) {\n  return Number.isInteger ? Number.isInteger(value) : typeof value === 'number' && Math.floor(value) === value;\n}\n\nfunction isConst(schema: JSONSchema7) {\n  return schema.hasOwnProperty('const') || (schema.enum && schema.enum.length === 1);\n}\n\nfunction totalMatchedFields(field: FormlyFieldConfig): number {\n  if (!field.fieldGroup) {\n    return !isNil(field.key) && getFieldValue(field) !== undefined ? 1 : 0;\n  }\n\n  const total = field.fieldGroup.reduce((s, f) => totalMatchedFields(f) + s, 0);\n  return total === 0 ? (field.key && getFieldValue(field) !== undefined ? 1 : 0) : total;\n}\n\ninterface IOptions extends FormlyJsonschemaOptions {\n  schema: JSONSchema7;\n  resetOnHide?: boolean;\n  shareFormControl?: boolean;\n  ignoreDefault?: boolean;\n  readOnly?: boolean;\n  key?: FormlyFieldConfig['key'];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class FormlyJsonschema {\n  toFieldConfig(schema: JSONSchema7, options?: FormlyJsonschemaOptions): FormlyFieldConfig {\n    return this._toFieldConfig(schema, { schema, ...(options || {}) });\n  }\n\n  private _toFieldConfig(schema: JSONSchema7, { key, ...options }: IOptions): FormlyFieldConfig {\n    schema = this.resolveSchema(schema, options);\n    const types = this.guessSchemaType(schema);\n\n    let field: FormlyFieldConfig = {\n      type: types[0],\n      defaultValue: schema.default,\n      templateOptions: {\n        label: schema.title,\n        readonly: schema.readOnly,\n        description: schema.description,\n      },\n    };\n\n    if (key != null) {\n      field.key = key;\n    }\n\n    if (!options.ignoreDefault && (schema.readOnly || options.readOnly)) {\n      field.templateOptions.disabled = true;\n      options = { ...options, readOnly: true };\n    }\n\n    if (options.resetOnHide) {\n      field.resetOnHide = true;\n    }\n\n    if (options.shareFormControl === false) {\n      field['shareFormControl'] = false;\n    }\n\n    if (options.ignoreDefault) {\n      delete field.defaultValue;\n    }\n\n    this.addValidator(field, 'type', {\n      schemaType: types,\n      expression: ({ value }) => {\n        if (value === undefined) {\n          return true;\n        }\n\n        if (value === null && types.indexOf('null') !== -1) {\n          return true;\n        }\n\n        switch (types[0]) {\n          case 'null': {\n            return typeof value === null;\n          }\n          case 'string': {\n            return typeof value === 'string';\n          }\n          case 'integer': {\n            return isInteger(value);\n          }\n          case 'number': {\n            return typeof value === 'number';\n          }\n          case 'object': {\n            return isObject(value);\n          }\n          case 'array': {\n            return Array.isArray(value);\n          }\n        }\n\n        return true;\n      },\n    });\n\n    switch (field.type) {\n      case 'number':\n      case 'integer': {\n        field.parsers = [\n          (v) => {\n            v = isEmpty(v) ? undefined : Number(v);\n\n            return v;\n          },\n        ];\n        if (schema.hasOwnProperty('minimum')) {\n          field.templateOptions.min = schema.minimum;\n        }\n\n        if (schema.hasOwnProperty('maximum')) {\n          field.templateOptions.max = schema.maximum;\n        }\n\n        if (schema.hasOwnProperty('exclusiveMinimum')) {\n          field.templateOptions.exclusiveMinimum = schema.exclusiveMinimum;\n          this.addValidator(\n            field,\n            'exclusiveMinimum',\n            ({ value }) => isEmpty(value) || value > schema.exclusiveMinimum,\n          );\n        }\n\n        if (schema.hasOwnProperty('exclusiveMaximum')) {\n          field.templateOptions.exclusiveMaximum = schema.exclusiveMaximum;\n          this.addValidator(\n            field,\n            'exclusiveMaximum',\n            ({ value }) => isEmpty(value) || value < schema.exclusiveMaximum,\n          );\n        }\n\n        if (schema.hasOwnProperty('multipleOf')) {\n          field.templateOptions.step = schema.multipleOf;\n          this.addValidator(field, 'multipleOf', ({ value }) => {\n            if (isEmpty(value) || typeof value !== 'number' || value === 0 || schema.multipleOf <= 0) {\n              return true;\n            }\n\n            // https://github.com/ajv-validator/ajv/issues/652#issue-283610859\n            const multiplier = Math.pow(10, decimalPlaces(schema.multipleOf));\n            return Math.round(value * multiplier) % Math.round(schema.multipleOf * multiplier) === 0;\n          });\n        }\n        break;\n      }\n      case 'string': {\n        field.parsers = [\n          (v) => {\n            if (types.indexOf('null') !== -1) {\n              v = isEmpty(v) ? null : v;\n            } else if (!field.templateOptions.required) {\n              v = v === '' ? undefined : v;\n            }\n\n            return v;\n          },\n        ];\n\n        ['minLength', 'maxLength', 'pattern'].forEach((prop) => {\n          if (schema.hasOwnProperty(prop)) {\n            field.templateOptions[prop] = schema[prop];\n          }\n        });\n        break;\n      }\n      case 'object': {\n        field.fieldGroup = [];\n\n        const [propDeps, schemaDeps] = this.resolveDependencies(schema);\n        Object.keys(schema.properties || {}).forEach((property) => {\n          const f = this._toFieldConfig(<JSONSchema7>schema.properties[property], { ...options, key: property });\n          field.fieldGroup.push(f);\n          if ((Array.isArray(schema.required) && schema.required.indexOf(property) !== -1) || propDeps[property]) {\n            f.expressionProperties = {\n              ...(f.expressionProperties || {}),\n              'templateOptions.required': (m, s, f) => {\n                let parent = f.parent;\n                const model = f.fieldGroup && f.key != null ? parent.model : f.model;\n                while (parent.key == null && parent.parent) {\n                  parent = parent.parent;\n                }\n\n                const required = parent && parent.templateOptions ? parent.templateOptions.required : false;\n                if (!model && !required) {\n                  return false;\n                }\n\n                if (Array.isArray(schema.required) && schema.required.indexOf(property) !== -1) {\n                  return true;\n                }\n\n                return propDeps[property] && m && propDeps[property].some((k) => !isEmpty(m[k]));\n              },\n            };\n          }\n\n          if (schemaDeps[property]) {\n            const getConstValue = (s: JSONSchema7) => {\n              return s.hasOwnProperty('const') ? s.const : s.enum[0];\n            };\n\n            const oneOfSchema = schemaDeps[property].oneOf;\n            if (\n              oneOfSchema &&\n              oneOfSchema.every((o) => o.properties && o.properties[property] && isConst(o.properties[property]))\n            ) {\n              oneOfSchema.forEach((oneOfSchemaItem) => {\n                const { [property]: constSchema, ...properties } = oneOfSchemaItem.properties;\n                field.fieldGroup.push({\n                  ...this._toFieldConfig({ ...oneOfSchemaItem, properties }, { ...options, resetOnHide: true }),\n                  hideExpression: (m) => !m || getConstValue(constSchema) !== m[property],\n                });\n              });\n            } else {\n              field.fieldGroup.push({\n                ...this._toFieldConfig(schemaDeps[property], options),\n                hideExpression: (m) => !m || isEmpty(m[property]),\n              });\n            }\n          }\n        });\n\n        if (schema.oneOf) {\n          field.fieldGroup.push(\n            this.resolveMultiSchema('oneOf', <JSONSchema7[]>schema.oneOf, { ...options, shareFormControl: false }),\n          );\n        }\n\n        if (schema.anyOf) {\n          field.fieldGroup.push(this.resolveMultiSchema('anyOf', <JSONSchema7[]>schema.anyOf, options));\n        }\n        break;\n      }\n      case 'array': {\n        if (schema.hasOwnProperty('minItems')) {\n          field.templateOptions.minItems = schema.minItems;\n          this.addValidator(field, 'minItems', ({ value }) => isEmpty(value) || value.length >= schema.minItems);\n        }\n        if (schema.hasOwnProperty('maxItems')) {\n          field.templateOptions.maxItems = schema.maxItems;\n          this.addValidator(field, 'maxItems', ({ value }) => isEmpty(value) || value.length <= schema.maxItems);\n        }\n        if (schema.hasOwnProperty('uniqueItems')) {\n          field.templateOptions.uniqueItems = schema.uniqueItems;\n          this.addValidator(field, 'uniqueItems', ({ value }) => {\n            if (isEmpty(value) || !schema.uniqueItems) {\n              return true;\n            }\n\n            const uniqueItems = Array.from(new Set(value.map((v: any) => JSON.stringify(v))));\n\n            return uniqueItems.length === value.length;\n          });\n        }\n\n        // resolve items schema needed for isEnum check\n        if (schema.items && !Array.isArray(schema.items)) {\n          schema.items = this.resolveSchema(<JSONSchema7>schema.items, options);\n        }\n\n        // TODO: remove isEnum check once adding an option to skip extension\n        if (!this.isEnum(schema)) {\n          field.fieldArray = (root) => {\n            if (!Array.isArray(schema.items)) {\n              // When items is a single schema, the additionalItems keyword is meaningless, and it should not be used.\n              const f = schema.items ? this._toFieldConfig(<JSONSchema7>schema.items, options) : {};\n              if (f.templateOptions) {\n                f.templateOptions.required = true;\n              }\n\n              return f;\n            }\n\n            const length = root.fieldGroup ? root.fieldGroup.length : 0;\n            const itemSchema = schema.items[length] ? schema.items[length] : schema.additionalItems;\n            const f = itemSchema ? this._toFieldConfig(<JSONSchema7>itemSchema, options) : {};\n            if (f.templateOptions) {\n              f.templateOptions.required = true;\n            }\n            if (schema.items[length]) {\n              f.templateOptions.removable = false;\n            }\n\n            return f;\n          };\n        }\n\n        break;\n      }\n    }\n\n    if (schema.hasOwnProperty('const')) {\n      field.templateOptions.const = schema.const;\n      this.addValidator(field, 'const', ({ value }) => value === schema.const);\n      if (!field.type) {\n        field.defaultValue = schema.const;\n      }\n    }\n\n    if (this.isEnum(schema)) {\n      field.templateOptions.multiple = field.type === 'array';\n      field.type = 'enum';\n      field.templateOptions.options = this.toEnumOptions(schema);\n    }\n\n    // map in possible formlyConfig options from the widget property\n    if (schema['widget'] && schema['widget'].formlyConfig) {\n      field = this.mergeFields(field, schema['widget'].formlyConfig);\n    }\n\n    // if there is a map function passed in, use it to allow the user to\n    // further customize how fields are being mapped\n    return options.map ? options.map(field, schema) : field;\n  }\n\n  private resolveSchema(schema: JSONSchema7, options: IOptions) {\n    if (schema && schema.$ref) {\n      schema = this.resolveDefinition(schema, options);\n    }\n\n    if (schema && schema.allOf) {\n      schema = this.resolveAllOf(schema, options);\n    }\n\n    return schema;\n  }\n\n  private resolveAllOf({ allOf, ...baseSchema }: JSONSchema7, options: IOptions) {\n    if (!allOf.length) {\n      throw Error(`allOf array can not be empty ${allOf}.`);\n    }\n\n    return allOf.reduce((base: JSONSchema7, schema: JSONSchema7) => {\n      schema = this.resolveSchema(schema, options);\n      if (base.required && schema.required) {\n        base.required = [...base.required, ...schema.required];\n      }\n\n      if (schema.uniqueItems) {\n        base.uniqueItems = schema.uniqueItems;\n      }\n\n      // resolve to min value\n      ['maxLength', 'maximum', 'exclusiveMaximum', 'maxItems', 'maxProperties'].forEach((prop) => {\n        if (!isEmpty(base[prop]) && !isEmpty(schema[prop])) {\n          base[prop] = base[prop] < schema[prop] ? base[prop] : schema[prop];\n        }\n      });\n\n      // resolve to max value\n      ['minLength', 'minimum', 'exclusiveMinimum', 'minItems', 'minProperties'].forEach((prop) => {\n        if (!isEmpty(base[prop]) && !isEmpty(schema[prop])) {\n          base[prop] = base[prop] > schema[prop] ? base[prop] : schema[prop];\n        }\n      });\n\n      return reverseDeepMerge(base, schema);\n    }, baseSchema);\n  }\n\n  private resolveMultiSchema(mode: 'oneOf' | 'anyOf', schemas: JSONSchema7[], options: IOptions): FormlyFieldConfig {\n    return {\n      type: 'multischema',\n      fieldGroup: [\n        {\n          type: 'enum',\n          defaultValue: -1,\n          templateOptions: {\n            multiple: mode === 'anyOf',\n            options: schemas.map((s, i) => ({ label: s.title, value: i, disabled: s.readOnly })),\n          },\n          hooks: {\n            onInit: (f) => f.formControl.valueChanges.pipe(tap(() => f.options.detectChanges(f.parent))),\n          },\n        },\n        {\n          fieldGroup: schemas.map((s, i) => ({\n            ...this._toFieldConfig(s, { ...options, resetOnHide: true }),\n            hideExpression: (m, fs, f, forceUpdate?: boolean) => {\n              const control = f.parent.parent.fieldGroup[0].formControl;\n              if (control.value === -1 || forceUpdate) {\n                let value = f.parent.fieldGroup\n                  .map((f, i) => [f, i] as [FormlyFieldConfig, number])\n                  .filter(([f, i]) => {\n                    return this.isFieldValid(f, schemas[i], options);\n                  })\n                  .sort(([f1], [f2]) => {\n                    const matchedFields1 = totalMatchedFields(f1);\n                    const matchedFields2 = totalMatchedFields(f2);\n                    if (matchedFields1 === matchedFields2) {\n                      if (f1.templateOptions.disabled === f2.templateOptions.disabled) {\n                        return 0;\n                      }\n\n                      return f1.templateOptions.disabled ? 1 : -1;\n                    }\n\n                    return matchedFields2 > matchedFields1 ? 1 : -1;\n                  })\n                  .map(([, i]) => i);\n\n                if (mode === 'anyOf') {\n                  const definedValue = value.filter((i) => totalMatchedFields(f.parent.fieldGroup[i]));\n                  value = definedValue.length > 0 ? definedValue : [value[0] || 0];\n                }\n\n                value = value.length > 0 ? value : [0];\n                control.setValue(mode === 'anyOf' ? value : value[0]);\n              }\n\n              return Array.isArray(control.value) ? control.value.indexOf(i) === -1 : control.value !== i;\n            },\n          })),\n        },\n      ],\n    };\n  }\n\n  private resolveDefinition(schema: JSONSchema7, options: IOptions): JSONSchema7 {\n    const [uri, pointer] = schema.$ref.split('#/');\n    if (uri) {\n      throw Error(`Remote schemas for ${schema.$ref} not supported yet.`);\n    }\n\n    const definition = !pointer\n      ? null\n      : pointer.split('/').reduce((def, path) => (def?.hasOwnProperty(path) ? def[path] : null), options.schema);\n\n    if (!definition) {\n      throw Error(`Cannot find a definition for ${schema.$ref}.`);\n    }\n\n    if (definition.$ref) {\n      return this.resolveDefinition(definition, options);\n    }\n\n    return {\n      ...definition,\n      ...['title', 'description', 'default', 'widget'].reduce((annotation, p) => {\n        if (schema.hasOwnProperty(p)) {\n          annotation[p] = schema[p];\n        }\n\n        return annotation;\n      }, {}),\n    };\n  }\n\n  private resolveDependencies(schema: JSONSchema7) {\n    const deps = {};\n    const schemaDeps = {};\n\n    Object.keys(schema.dependencies || {}).forEach((prop) => {\n      const dependency = schema.dependencies[prop] as JSONSchema7;\n      if (Array.isArray(dependency)) {\n        // Property dependencies\n        dependency.forEach((dep) => {\n          if (!deps[dep]) {\n            deps[dep] = [prop];\n          } else {\n            deps[dep].push(prop);\n          }\n        });\n      } else {\n        // schema dependencies\n        schemaDeps[prop] = dependency;\n      }\n    });\n\n    return [deps, schemaDeps];\n  }\n\n  private guessSchemaType(schema: JSONSchema7) {\n    const type = schema?.type;\n    if (!type && schema?.properties) {\n      return ['object'];\n    }\n\n    if (Array.isArray(type)) {\n      if (type.length === 1) {\n        return type;\n      }\n\n      if (type.length === 2 && type.indexOf('null') !== -1) {\n        return type.sort((t1, t2) => (t1 == 'null' ? 1 : -1));\n      }\n\n      return type;\n    }\n\n    return type ? [type] : [];\n  }\n\n  private addValidator(field: FormlyFieldConfig, name: string, validator: FormlyFieldConfig['validators']) {\n    field.validators = field.validators || {};\n    field.validators[name] = validator;\n  }\n\n  private isEnum(schema: JSONSchema7) {\n    return (\n      schema.enum ||\n      (schema.anyOf && schema.anyOf.every(isConst)) ||\n      (schema.oneOf && schema.oneOf.every(isConst)) ||\n      (schema.uniqueItems && schema.items && !Array.isArray(schema.items) && this.isEnum(<JSONSchema7>schema.items))\n    );\n  }\n\n  private toEnumOptions(schema: JSONSchema7) {\n    if (schema.enum) {\n      return schema.enum.map((value) => ({ value, label: value }));\n    }\n\n    const toEnum = (s: JSONSchema7) => {\n      const value = s.hasOwnProperty('const') ? s.const : s.enum[0];\n      const option: any = { value, label: s.title || value };\n      if (s.readOnly) {\n        option.disabled = true;\n      }\n\n      return option;\n    };\n\n    if (schema.anyOf) {\n      return schema.anyOf.map(toEnum);\n    }\n\n    if (schema.oneOf) {\n      return schema.oneOf.map(toEnum);\n    }\n\n    return this.toEnumOptions(<JSONSchema7>schema.items);\n  }\n\n  private isFieldValid(field: FormlyFieldConfig, schema: JSONSchema7, options: IOptions): boolean {\n    const { form } = field.options.build({\n      form: new FormGroup({}),\n      fieldGroup: [this._toFieldConfig(schema, { ...options, resetOnHide: true, ignoreDefault: true, map: null })],\n      model: field.model ? clone(field.model) : field.fieldArray ? [] : {},\n    });\n\n    return form.valid;\n  }\n\n  private mergeFields(f1: FormlyFieldConfig, f2: FormlyFieldConfig) {\n    for (let prop in f2) {\n      if (isObject(f1[prop]) && isObject(f2[prop])) {\n        f1[prop] = this.mergeFields(f1[prop], f2[prop]);\n      } else if (f2[prop] != null) {\n        f1[prop] = f2[prop];\n      }\n    }\n\n    return f1;\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["isNil","getFieldValue","reverseDeepMerge","clone"],"mappings":"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"}