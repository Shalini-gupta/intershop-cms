{"version":3,"file":"ngx-formly-core-testing.mjs","sources":["../../../../src/core/testing/src/component-factory.ts","../../../../src/core/testing/src/ngx-formly-core-testing.ts"],"sourcesContent":["import { TestBed, ComponentFixture } from '@angular/core/testing';\nimport { Component, DebugElement, APP_INITIALIZER, NgModule } from '@angular/core';\nimport { FormlyModule, FormlyFormBuilder, FormlyFieldConfig, ConfigOption } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { By } from '@angular/platform-browser';\nimport { of } from 'rxjs';\n\nfunction setInputs<T>(fixture: ComponentFixture<T>, inputs: T, detectChanges = true) {\n  Object.keys(inputs).forEach((input) => {\n    fixture.componentInstance[input] = inputs[input];\n  });\n\n  if (detectChanges !== false) {\n    fixture.detectChanges();\n  }\n}\n\ninterface IComponentOptions<T> extends NgModule {\n  template?: string;\n  inputs?: T;\n  config?: ConfigOption;\n  detectChanges?: boolean;\n}\ninterface IFormlyDebugElement<E> extends DebugElement {\n  readonly nativeElement: E;\n}\n\nexport function createComponent<T>({\n  template,\n  inputs,\n  config,\n  detectChanges,\n  imports,\n  declarations,\n  providers,\n}: IComponentOptions<T>) {\n  TestBed.configureTestingModule({\n    declarations: [TestComponent, ...(declarations || [])],\n    imports: [ReactiveFormsModule, FormlyModule.forRoot(config), ...(imports || [])],\n    providers: providers || [],\n    teardown: { destroyAfterEach: false },\n  }).overrideComponent(TestComponent, {\n    set: {\n      template,\n      inputs: Object.keys(inputs),\n    },\n  });\n\n  const fixture = TestBed.createComponent(TestComponent);\n  Object.keys(inputs).forEach((input) => {\n    fixture.componentInstance[input] = inputs[input];\n  });\n\n  setInputs(fixture, inputs, detectChanges);\n\n  type FixtureUtils = T & {\n    fixture: ComponentFixture<T>;\n    detectChanges: typeof fixture['detectChanges'];\n    setInputs: (inputs: Partial<T>) => void;\n    query: <E extends Element = Element>(selector: string) => IFormlyDebugElement<E>;\n    queryAll: <E extends Element = Element>(selector: string) => IFormlyDebugElement<E>[];\n  };\n\n  const utils = {\n    fixture,\n    detectChanges: () => fixture.detectChanges(),\n    setInputs: (props) => setInputs(fixture, props),\n    query: (selector: string) => fixture.debugElement.query(By.css(selector)),\n    queryAll: (selector: string) => fixture.debugElement.queryAll(By.css(selector)),\n  } as FixtureUtils;\n\n  Object.keys(inputs).forEach((input) => {\n    Object.defineProperty(utils, input, {\n      get: () => fixture.componentInstance[input],\n    });\n  });\n\n  return utils;\n}\n\nexport function createFieldComponent(\n  field: FormlyFieldConfig,\n  config: IComponentOptions<{ field: FormlyFieldConfig }> = {},\n) {\n  const model = field?.model || {};\n  const options = field?.options || {};\n  delete (field as any)?.model;\n  delete (field as any)?.options;\n\n  return createComponent<{ field: FormlyFieldConfig }>({\n    template: '<formly-field [field]=\"field\"></formly-field>',\n    inputs: { field },\n    ...config,\n    providers: [\n      ...(config.providers || []),\n      {\n        provide: APP_INITIALIZER,\n        useFactory: (builder: FormlyFormBuilder) => () => {\n          builder.build({\n            model,\n            options,\n            fieldGroup: [field],\n          });\n\n          return of(null);\n        },\n        deps: [FormlyFormBuilder],\n        multi: true,\n      },\n    ],\n  });\n}\n\n@Component({\n  selector: 'formly-test-component',\n  template: '',\n})\nclass TestComponent {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}